from aiogram.types import Message, Update
from aiogram import BaseMiddleware
from typing import Callable, Dict, Any, Awaitable
from bot.logger import logger
from users.models import User 

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø–ª–∞—Ç—ã (–º–æ–∂–Ω–æ –ø–æ—Ç–æ–º –≤ settings –≤—ã—Ç–∞—â–∏—Ç—å)
PAYMENT_WALLET = "TY43ubA82J5mrViFwAsNpNLkNLaj2rvx1Z"
PAYMENT_NETWORK = "TRC20"

PAYMENT_MESSAGE = (
    f"üîí –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É:\n\n"
    f"1Ô∏è‚É£ –û–ø–ª–∞—Ç–∏—Ç–µ 100 USDT –≤ —Å–µ—Ç–∏ {PAYMENT_NETWORK} –Ω–∞ –∫–æ—à–µ–ª—ë–∫:\n"
    f"<code>{PAYMENT_WALLET}</code>\n\n"
    f"2Ô∏è‚É£ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ TXID –≤ –õ–° üëâ @ScalpingBotSupport\n\n"
    f"–ü–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞–∂–∞—Ç—å /start –¥–ª—è –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
)

class AccessMiddleware(BaseMiddleware):
    async def __call__(
        self,
        handler: Callable[[Update, Dict[str, Any]], Awaitable[Any]],
        event: Update,
        data: Dict[str, Any]
    ) -> Any:
        message = event.message

        if message:  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
            telegram_user = message.from_user
            try:
                user_exists = await User.objects.filter(telegram_id=telegram_user.id).aexists()
            except Exception as e:
                logger.error(f"DB error while checking user access: {e}")
                user_exists = False

            if not user_exists:
                await message.answer(PAYMENT_MESSAGE, parse_mode="HTML")
                return  # –ë–ª–æ–∫–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–ª—å—à–µ

        return await handler(event, data)
